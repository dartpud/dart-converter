{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/components.module.ts","./src/app/components/logged-container/logged-container.component.ts","./src/app/components/logged-container/logged-container.component.html","./src/app/components/page-title/page-title.component.ts","./src/app/components/page-title/page-title.component.html","./src/app/interceptors/token.interceptor.ts","./src/app/models/user.model.ts","./src/app/modules/material.module.ts","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/home/home.guard.ts","./src/app/pages/sign-in.guard.ts","./src/app/pages/sign-in/sign-in.component.ts","./src/app/pages/sign-in/sign-in.component.html","./src/app/services/auth.service.ts","./src/app/services/user.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './pages/home/home.component';\nimport { HomeGuard } from './pages/home/home.guard';\nimport { SignInGuard } from './pages/sign-in.guard';\nimport { SignInComponent } from './pages/sign-in/sign-in.component';\n\nconst routes: Routes = [\n  {\n    path: 'sign-in',\n    component: SignInComponent,\n    canActivate: [SignInGuard]\n  },\n  {\n    path: 'home',\n    component: HomeComponent,\n    canActivate: [HomeGuard]\n  },\n  {\n    path: '**',\n    redirectTo: 'home'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'dart-converter-web';\n}\n","<ngx-spinner type=\"ball-scale-multiple\"></ngx-spinner>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SignInComponent } from './pages/sign-in/sign-in.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MaterialModule } from './modules/material.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HomeComponent } from './pages/home/home.component';\nimport { ComponentsModule } from './components/components.module';\nimport { TokenInterceptor } from './interceptors/token.interceptor';\nimport { NgxSpinnerModule } from 'ngx-spinner';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignInComponent,\n    HomeComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FlexLayoutModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    HttpClientModule,\n    ComponentsModule,\n    FormsModule,\n    NgxSpinnerModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PageTitleComponent } from './page-title/page-title.component';\nimport { MaterialModule } from '../modules/material.module';\nimport { LoggedContainerComponent } from './logged-container/logged-container.component';\n\n@NgModule({\n  declarations: [\n    PageTitleComponent,\n    LoggedContainerComponent\n  ],\n  imports: [\n    CommonModule,\n    MaterialModule\n  ],\n  exports: [\n    PageTitleComponent,\n    LoggedContainerComponent\n  ]\n})\nexport class ComponentsModule { }\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserModel } from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-logged-container',\n  templateUrl: './logged-container.component.html',\n  styleUrls: ['./logged-container.component.scss']\n})\nexport class LoggedContainerComponent implements OnInit {\n\n  @Input() user: UserModel;\n\n  constructor(\n    private _authService: AuthService,\n    private _router: Router\n  ) { }\n\n  ngOnInit(): void {\n  }\n  \n  refresh(): void {\n    window.location.reload();\n  }\n\n  exit(): void {\n    this._authService.clearSession();\n    this._router.navigate(['/sign-in'])\n  }\n\n}\n","<div class=\"container\">\n\n    <mat-toolbar color=\"primary\">\n\n        <mat-toolbar-row>\n            <span class=\"title\" (click)=\"refresh()\">\n                Dart Converter\n            </span>\n            <span class=\"spacer\"></span>\n            <label class=\"exit\" (click)=\"exit()\">\n                Sair\n            </label>\n        </mat-toolbar-row>\n\n    </mat-toolbar>\n\n    <ng-content></ng-content>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-title',\n  templateUrl: './page-title.component.html',\n  styleUrls: ['./page-title.component.scss']\n})\nexport class PageTitleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>\n    <ng-content></ng-content>\n</h1>","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { NgxSpinnerService } from \"ngx-spinner\";\nimport { finalize, Observable, tap, throwError } from \"rxjs\";\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n    constructor(\n        private _authService: AuthService,\n        private _router: Router,\n        private _ngxSpinnerService: NgxSpinnerService\n    ) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n        this._ngxSpinnerService.show();\n\n        if (request.url.includes('token')) {\n            return next.handle(request)\n                .pipe(\n                    finalize(() => {\n                        this._ngxSpinnerService.hide();\n                    })\n                );\n        }\n        else {\n            const accessToken = this._authService.accessToken;\n\n            if (accessToken) {\n                request = request.clone({\n                    setHeaders: { Authorization: `Bearer ${accessToken}` }\n                });\n            }\n\n            return next.handle(request).pipe(\n                tap({\n                    next: () => null,\n                    error: (err: HttpErrorResponse) => {\n\n                        if (err.status == 401) {\n                            this._authService.clearSession();\n                            this._router.navigate(['/sign-in']);\n                        }\n\n                        return throwError(err);\n                    }\n                }),\n                finalize(() => {\n                    this._ngxSpinnerService.hide();\n                })\n            );\n        }\n    }\n}","export class UserModel {\r\n    id_user?: number;\r\n    username: string;\r\n    password: string | null;\r\n    id_application: string;\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n// Material Form Controls\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\n// Material Navigation\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\n// Material Layout\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n// Material Buttons & Indicators\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatRippleModule } from '@angular/material/core';\r\n// Material Popups & Modals\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n// Material Data tables\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    MatAutocompleteModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatListModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatTreeModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatBadgeModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatRippleModule,\r\n    MatBottomSheetModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatTooltipModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatTableModule\r\n  ],\r\n  exports: [\r\n    MatAutocompleteModule,\r\n    MatCheckboxModule,\r\n    MatDatepickerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatListModule,\r\n    MatStepperModule,\r\n    MatTabsModule,\r\n    MatTreeModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatBadgeModule,\r\n    MatChipsModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatProgressBarModule,\r\n    MatRippleModule,\r\n    MatBottomSheetModule,\r\n    MatDialogModule,\r\n    MatSnackBarModule,\r\n    MatTooltipModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatTableModule\r\n  ]\r\n})\r\nexport class MaterialModule { }","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { UserModel } from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { UserViewModel } from 'src/app/viewmodel/user.viewmodel';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  userLogged: UserModel;\n\n  userList: UserViewModel[] = [];\n\n  columns: string[] = ['id', 'username', 'password', 'id_application', 'actions'];\n\n  constructor(\n    private _authService: AuthService,\n    private _userService: UserService\n  ) { }\n\n  ngOnInit(): void {\n    this.userLogged = this._authService.user;\n\n    this.loadUserList();\n  }\n\n  loadUserList(): void {\n    this._userService.getAll().subscribe({\n      next: (response) => {\n        this.userList = response.map(user => {\n          return {\n            ...user,\n            isEdit: false,\n            isAdd: false,\n            changePassword: false,\n            hidePassword: true\n          }\n        });\n      },\n\n      error: (error) => {\n        alert('Erro ao buscar usuários cadastrados.');\n      }\n    });\n  }\n\n  editUser(user: UserViewModel): void {\n    if (!user.changePassword || !user.password) {\n      user.password = null;\n    }\n\n    this._userService.update(user).subscribe({\n      next: () => {\n        alert('Usuário editado com sucesso.');\n        window.location.reload();\n      },\n\n      error: (error: HttpErrorResponse) => {\n        if (error.status == 412) {\n          alert(error.error);\n        }\n      }\n    })\n  }\n\n  addUser(user: UserViewModel): void {\n    this._userService.create(user).subscribe({\n      next: () => {\n        alert('Usuário criado com sucesso.');\n        window.location.reload();\n      },\n\n      error: (error: HttpErrorResponse) => {\n        if (error.status == 412) {\n          alert(error.error);\n        }\n      }\n    })\n  }\n\n  addRow(): void {\n    const newRow: UserViewModel = {\n      changePassword: true,\n      hidePassword: true,\n      isAdd: true,\n      isEdit: false,\n      id_application: environment.id_application,\n      password: '',\n      username: ''\n    };\n\n    this.userList = [\n      ...this.userList,\n      newRow\n    ];\n  }\n\n  deleteUser(user: UserViewModel): void {\n    if (user.id_user == this.userLogged.id_user) {\n      alert('Não é possível excluir o usuário que você está logado.');\n    }\n    else {\n      const continueToDelete = confirm('Tem certeza que deseja excluir esse usuário?');\n\n      if (continueToDelete) {\n        this._userService.delete(user).subscribe({\n          next: () => {\n            alert('Usuário excluído com sucesso.');\n            window.location.reload();\n          },\n          \n          error: (error) => {\n            alert('Erro ao excluir usuário.');\n          }\n        });\n      }\n    }\n  }\n\n\n}\n","<app-logged-container [user]=\"userLogged\">\n\n    <div class=\"home-container\">\n\n        <app-page-title>\n            Olá {{userLogged.username}},\n            <br />\n            <br />\n            Segue a lista de usuários cadastrados no sistema.\n        </app-page-title>\n\n        <button mat-flat-button color=\"primary\" class=\"btn-add-user\" (click)=\"addRow()\">\n            CRIAR NOVO USUÁRIO\n        </button>\n\n        <table mat-table [dataSource]=\"userList\">\n            <ng-container matColumnDef=\"id\">\n                <th mat-header-cell *matHeaderCellDef width=\"10%\">\n                    ID\n                </th>\n                <td mat-cell *matCellDef=\"let element\" width=\"10%\">\n                    {{element.id_user}}\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"username\">\n                <th mat-header-cell *matHeaderCellDef width=\"25%\">\n                    Usuário\n                </th>\n                <td mat-cell *matCellDef=\"let element\" width=\"25%\">\n                    <ng-container *ngIf=\"!element.isEdit && !element.isAdd\">\n                        {{element.username}}\n                    </ng-container>\n                    <mat-form-field floatLabel=\"never\" *ngIf=\"element.isEdit || element.isAdd\">\n                        <input matInput placeholder=\"Usuário\" [value]=\"element.username\" [(ngModel)]=\"element.username\">\n                    </mat-form-field>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"password\">\n                <th mat-header-cell *matHeaderCellDef width=\"25%\">\n                    Senha\n                </th>\n                <td mat-cell *matCellDef=\"let element\" width=\"25%\">\n                    <ng-container *ngIf=\"!element.isEdit && !element.isAdd\">\n                        ?\n                    </ng-container>\n                    <ng-container *ngIf=\"element.isEdit || element.isAdd\">\n                        <button mat-stroked-button color=\"primary\" *ngIf=\"!element.changePassword\" (click)=\"element.changePassword = !element.changePassword\">\n                            ALTERAR SENHA\n                        </button>\n                        <mat-form-field floatLabel=\"never\" *ngIf=\"element.changePassword\">\n                            <input matInput [type]=\"element.hidePassword ? 'password' : 'text'\" placeholder=\"Senha\" [value]=\"element.password\"\n                                [(ngModel)]=\"element.password\">\n                            <button mat-icon-button matSuffix (click)=\"element.hidePassword = !element.hidePassword\"\n                                [attr.aria-label]=\"(element.hidePassword ? 'Exibir' : 'Ocultar') + ' senha'\">\n                                <mat-icon>{{element.hidePassword ? 'visibility' : 'visibility_off'}}</mat-icon>\n                            </button>\n                        </mat-form-field>\n                    </ng-container>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"id_application\">\n                <th mat-header-cell *matHeaderCellDef width=\"25%\">\n                    Aplicação\n                </th>\n                <td mat-cell *matCellDef=\"let element\" width=\"25%\">\n                    {{element.id_application}}\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"actions\">\n                <th mat-header-cell *matHeaderCellDef width=\"15%\" style=\"text-align: center\">\n                    Ações\n                </th>\n                <td mat-cell *matCellDef=\"let element\" width=\"15%\" style=\"text-align: center\">\n                    <ng-container *ngIf=\"!element.isEdit && !element.isAdd\">\n                        <button mat-icon-button color=\"primary\" aria-label=\"Editar\" (click)=\"element.isEdit = !element.isEdit\">\n                            <mat-icon>\n                                edit\n                            </mat-icon>\n                        </button>\n                        <button mat-icon-button color=\"warn\" aria-label=\"Excluir\" (click)=\"deleteUser(element)\">\n                            <mat-icon>\n                                delete\n                            </mat-icon>\n                        </button>\n                    </ng-container>\n                    <ng-container *ngIf=\"element.isEdit || element.isAdd\">\n                        <button mat-icon-button color=\"primary\" aria-label=\"Salvar\" (click)=\"element.isEdit ? editUser(element) : addUser(element)\">\n                            <mat-icon>\n                                save\n                            </mat-icon>\n                        </button>\n                    </ng-container>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"columns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: columns;\"></tr>\n        </table>\n\n    </div>\n\n</app-logged-container>\n","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeGuard implements CanActivate {\n\n  constructor(\n    private _authService: AuthService,\n    private _router: Router\n  ) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (!this._authService.accessToken || this._authService.user?.id_user == 0) {\n      this._router.navigate(['/sign-in']);\n      return false;\n    }\n\n    return true;\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignInGuard implements CanActivate {\n\n  constructor(\n    private _authService: AuthService,\n    private _router: Router\n  ) { }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this._authService.accessToken || (this._authService.user?.id_user && this._authService.user.id_user > 0)) {\n      this._router.navigate(['/home']);\n      return false;\n    }\n\n    return true;\n  }\n\n}","import { HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { TokenRequest } from 'src/app/models/token.request';\nimport { UserModel } from 'src/app/models/user.model';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss']\n})\nexport class SignInComponent implements OnInit {\n\n  form: FormGroup;\n\n  hide: boolean = true;\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _authService: AuthService,\n    private _userService: UserService,\n    private _router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.form = this._formBuilder.group({\n      username: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  trySignIn(): void {\n    this.form.markAllAsTouched();\n\n    if (this.form.valid) {\n      const formValue = this.form.getRawValue();\n\n      const request: TokenRequest = {\n        username: formValue.username,\n        password: formValue.password,\n        id_application: environment.id_application\n      };\n\n      this._authService.token(request).subscribe({\n        next: (response) => {\n          this._authService.createSession(response);\n          this._router.navigate(['/home']);\n        },\n\n        error: (error: HttpErrorResponse) => {\n          if (error.status == 412) {\n            alert(error.error)\n          }\n        }\n      });\n    }\n  }\n\n  trySignUp(): void {\n    this.form.markAllAsTouched();\n\n    if (this.form.valid) {\n      const formValue = this.form.getRawValue();\n\n      const request: UserModel = {\n        username: formValue.username,\n        password: formValue.password,\n        id_application: environment.id_application\n      };\n\n      this._userService.create(request).subscribe({\n        next: (response) => {\n          alert('Usuário cadastrado com sucesso')\n        },\n\n        error: (error: HttpErrorResponse) => {\n          if (error.status == 412) {\n            alert(error.error)\n          }\n        }\n      });\n    }\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"card-sign-in\">\n        <form [formGroup]=\"form\" autocomplete=\"off\">\n            <img src=\"/assets/images/logo-dart.png\" />\n            <mat-form-field appearance=\"outline\">\n                <mat-label>\n                    Usuário\n                </mat-label>\n                <input matInput type=\"text\" formControlName=\"username\" autocomplete=\"off\">\n            </mat-form-field>\n            <mat-form-field appearance=\"outline\">\n                <mat-label>\n                    Senha\n                </mat-label>\n                <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" autocomplete=\"off\">\n                <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"(hide ? 'Exibir' : 'Ocultar') + ' senha'\">\n                    <mat-icon>{{hide ? 'visibility' : 'visibility_off'}}</mat-icon>\n                </button>\n            </mat-form-field>\n            <button mat-raised-button color=\"primary\" (click)=\"trySignIn()\">\n                Entrar\n            </button>\n            <button mat-stroked-button color=\"accent\" class=\"link-sign-up\" (click)=\"trySignUp()\">\n                Cadastrar\n            </button>\n        </form>\n    </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { TokenRequest } from '../models/token.request';\nimport { TokenResponse } from '../models/token.response';\nimport { UserModel } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(\n    private _http: HttpClient\n  ) { }\n\n  token(request: TokenRequest): Observable<TokenResponse> {\n    return this._http.post<TokenResponse>(`${environment.api}/auth/token`, request);\n  }\n\n  createSession(tokenModel: TokenResponse): void {\n    this.accessToken = tokenModel.access_token;\n    this.user = tokenModel.user;\n  }\n\n  clearSession(): void {\n    localStorage.clear();\n  }\n\n  get accessToken(): string {\n    const response = localStorage.getItem('accessToken');\n    return response || '';\n  }\n\n  set accessToken(accessToken: string) {\n    localStorage.setItem('accessToken', accessToken);\n  }\n\n  get user(): UserModel {\n    try {\n      const userString = localStorage.getItem('user');\n\n      if (userString == null) {\n        return new UserModel();\n      }\n\n      const response = JSON.parse(userString);\n      return response;\n    }\n    catch {\n      return new UserModel();\n    }\n  }\n\n  set user(user: UserModel) {\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { UserModel } from '../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(\n    private _http: HttpClient\n  ) { }\n\n  create(user: UserModel): Observable<void> {\n    return this._http.post<void>(`${environment.api}/user`, user);\n  }\n\n  update(user: UserModel): Observable<void> {\n    return this._http.put<void>(`${environment.api}/user`, user);\n  }\n\n  getAll(): Observable<UserModel[]> {\n    return this._http.get<UserModel[]>(`${environment.api}/user/${environment.id_application}`);\n  }\n\n  getById(idUser: number): Observable<UserModel> {\n    return this._http.get<UserModel>(`${environment.api}/user/${idUser}/${environment.id_application}`);\n  }\n\n  delete(user: UserModel): Observable<void> {\n    return this._http.delete<void>(`${environment.api}/user/${user.id_user}/${environment.id_application}`);\n  }\n}\n","export const environment = {\n  production: false,\n  id_application: 'ac4738fa-f45d-489f-9473-f10369725289',\n  api: 'https://dart-converter-api.azurewebsites.net/api'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}